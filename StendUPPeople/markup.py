from aiogram import Bot, Dispatcher, executor, types
from base.models import Client, Follow, Subject


async def permission_markup(user_id):
    
    bt_restart = types.KeyboardButton('‚ôªÔ∏è restart ‚ôªÔ∏è')
    
    bt_follow = types.KeyboardButton(
        text='‚úÖ –ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è'
    )
    bt_silentfollow = types.KeyboardButton(
        text='–¢–∏—Ö–∞—è ü§´ –ø–æ–¥–ø–∏—Å–∫–∞'
    )
    bt_cancel = types.KeyboardButton('‚ùå –û—Ç–ø–∏—Å–∞—Ç—å—Å—è')
    bt_info = types.KeyboardButton('‚ÑπÔ∏è –û –ø—Ä–æ–µ–∫—Ç–µ')
    r_keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=False)
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–ø–∏—Å–∫–∏
    follow = await check_follow(user_id)
    if follow:
        r_keyboard.add(bt_restart)
        r_keyboard.add(bt_info)
        r_keyboard.add(bt_cancel)
    else:
        r_keyboard.add(bt_restart)
        r_keyboard.add(bt_follow)
        r_keyboard.add(bt_silentfollow)
        r_keyboard.add(bt_info)
    return r_keyboard


# Inline –ø–æ–¥–ø–∏—Å–∫–∞
async def follow_inlinemarkup(user_id):
    
    bt_rest = types.InlineKeyboardButton(
            text='‚ôªÔ∏è restart ‚ôªÔ∏è',
            callback_data='restart'
            )
    bt_follow_yes = types.InlineKeyboardButton(
            text='‚úÖ –ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è',
            callback_data='follow_yes'
            )

    keyboard = types.InlineKeyboardMarkup(resize_keyboard=True)
    
    follow = await check_follow(user_id)
    if not follow:
        bt_line1 = [bt_follow_yes]
        keyboard.add(*bt_line1)
        bt_line2 = [bt_rest]
    else:
        bt_line2 = [bt_rest]
    keyboard.add(*bt_line2)
    
    return keyboard


# –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –ø–æ–¥–ø–∏—Å–∫—É
async def check_follow(user_id):
    try:
        Follow.objects.get(id=user_id)
        check = True
    except:
        check = False
    return check